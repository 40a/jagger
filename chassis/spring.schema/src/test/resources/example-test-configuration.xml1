<?xml version="1.0" encoding="UTF-8"?>

<!--
  ~ Copyright (c) 2010-2012 Grid Dynamics Consulting Services, Inc, All Rights Reserved
  ~ http://www.griddynamics.com
  ~
  ~ This library is free software; you can redistribute it and/or modify it under the terms of
  ~ the GNU Lesser General Public License as published by the Free Software Foundation; either
  ~ version 2.1 of the License, or any later version.
  ~
  ~ THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  ~ AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  ~ IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  ~ DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE
  ~ FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  ~ DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  ~ SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  ~ CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  ~ OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  ~ OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  -->

<beans:beans
        xmlns="http://www.griddynamics.com/schema/jagger"
        xmlns:beans="http://www.springframework.org/schema/beans"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation=
       "
        http://www.griddynamics.com/schema/jagger
        http://www.griddynamics.com/schema/jagger.xsd
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd"
        >

    <configuration id="config1" monitoringEnable="true">
        <test-plan ref="test-plan-1"/>

        <report rootTemplateLocation="custom-root-template.jrxml"
                    outputReportLocation="custom-report.pdf" reportType="HTML">
        </report>
        <!--don't use in tests, only runtime-->
        <!--<percentiles>-->
            <!--<percentiles-global>-->
                <!--<percentile>70</percentile>-->
            <!--</percentiles-global>-->
        <!--</percentiles>-->

    </configuration>

    <test-plan id="test-plan-1">
        <test ref="test1"/>
    </test-plan>

    <test id="test1" name="user-test" duration="200">
        <task id="t3" name="3-groups-50-50-50" sample="1000" delay="0" workload="w1">
            <user id="u2" count="50" startCount="50" startIn="0" startBy="0" life="2h"/>
            <user id="u3" count="50" startCount="50" startIn="0" startBy="0" life="2h"/>
            <user id="u4" count="50" startCount="50" startIn="0" startBy="0" life="2h"/>
        </task>
        <task id="t4" name="virtual-user-10" sample="1000" delay="0" workload="w1">
            <virtual-user ref="vu1"/>
        </task>
    </test>

    <test id="test2" name="tps-test" duration="200">
        <task id="t5" name="tps-test" sample="1000" delay="0" workload="w1">
            <tps id="tps1" value="10"/>
        </task>
    </test>

    <virtual-user id="vu1" count="10" tickInterval="10"/>

    <!--workload-->

    <metric id="metric1" xsi:type="simpleMetric"/>

    <endpointProvider id="endpointProvider1" xsi:type="simpleEndpointProvider">
        <endpoint>http://localhost:8090/sleep/5</endpoint>
        <endpoint>http://localhost:8090/sleep/25</endpoint>
        <endpoint>http://localhost:8090/sleep/50</endpoint>
    </endpointProvider>

    <query id="httpQ1" xsi:type="httpQuery" method="GET">
        <clientParams>
            <beans:entry key="http.protocol.allow-circular-redirects">
                <beans:bean class="java.lang.Boolean">
                    <beans:constructor-arg value="false"/>
                </beans:bean>
            </beans:entry>
            <beans:entry key="http.protocol.max-redirects">
                <beans:bean class="java.lang.Integer">
                    <beans:constructor-arg value="2"/>
                </beans:bean>
            </beans:entry>
            <beans:entry key="http.connection-manager.timeout">
                <beans:bean class="java.lang.Long"><beans:constructor-arg value="5000" /></beans:bean>
            </beans:entry>
            <beans:entry key="http.protocol.max-redirects">
                <beans:bean class="java.lang.Integer"><beans:constructor-arg value="0" /></beans:bean>
            </beans:entry>
        </clientParams>
    </query>

    <queryProvider id="qProvider1" xsi:type="simpleQueryProvider">
        <query xsi:type="queryRef" ref="httpQ1"/>
    </queryProvider>

    <workload id="w1">

        <listeners>
            <validator xsi:type="notNullResponse"/>
            <metric xsi:type="metricRef" ref="metric1"/>
        </listeners>

        <scenario xsi:type="scenarioRef" ref="sc1"/>

    </workload>

    <scenario id="sc1" xsi:type="queryPoolScenario">

        <loadBalancer xsi:type="roundRobinLoadBalancer"/>

        <invoker xsi:type="httpInvoker"/>

        <endpointProvider xsi:type="endpointProviderRef" ref="endpointProvider1"/>

        <queryProvider xsi:type="queryProviderRef" ref="qProvider1" />
    </scenario>



    <beans:bean id="durationCollector" class="com.griddynamics.jagger.engine.e1.scenario.ReflectionProvider"/>
    <beans:bean id="informationCollector" class="com.griddynamics.jagger.engine.e1.scenario.ReflectionProvider"/>

    <beans:bean id="basicSessionCollector" class="com.griddynamics.jagger.engine.e1.collector.BasicSessionCollector"/>
    <beans:bean id="e1MasterCollector" class="com.griddynamics.jagger.engine.e1.collector.BasicSessionCollector"/>
    <beans:bean id="basicAggregator" class="com.griddynamics.jagger.engine.e1.collector.BasicSessionCollector"/>
    <beans:bean id="e1ScenarioAggregator" class="com.griddynamics.jagger.engine.e1.collector.BasicSessionCollector"/>
    <beans:bean id="monitoringAggregator" class="com.griddynamics.jagger.engine.e1.collector.BasicSessionCollector"/>
    <beans:bean id="durationLogProcessor" class="com.griddynamics.jagger.engine.e1.collector.BasicSessionCollector"/>
    <!--<beans:bean id="durationLogProcessor" class="com.griddynamics.jagger.engine.e1.aggregator.workload.DurationLogProcessor">-->
        <!--<beans:property name="globalPercentilesKeys" ref="standardPercentilesTimeSeries"/>-->
        <!--<beans:property name="timeWindowPercentilesKeys" ref="standardPercentilesTimeSeries"/>-->
        <!--<beans:property name="hibernateTemplate" ref="template"/>-->
        <!--<beans:property name="sessionFactory" ref="factory"/>-->
        <!--<beans:property name="logAggregator" ref="aggregator"/>-->
        <!--<beans:property name="logReader" ref="reader"/>-->
        <!--<beans:property name="sessionIdProvider" value="beans:null"/>-->
        <!--<beans:property name="pointCount" value="1"/>-->
    <!--</beans:bean>-->

    <!--<beans:bean id="template" class="org.springframework.orm.hibernate3.HibernateTemplate">-->
        <!--<beans:property name="sessionFactory" ref="factory"/>-->
    <!--</beans:bean>-->
    <!--<beans:bean id="factory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">-->
        <!--<beans:property name="hibernateProperties">-->
            <!--<beans:props>-->
                <!--<beans:prop key="hibernate.hbm2ddl.auto">update</beans:prop>-->
                <!--<beans:prop key="hibernate.dialect">${chassis.storage.hibernate.dialect}</beans:prop>-->
                <!--<beans:prop key="hibernate.show_sql">false</beans:prop>-->
                <!--<beans:prop key="hibernate.jdbc.batch_size">1</beans:prop>-->
            <!--</beans:props>-->
        <!--</beans:property>-->
    <!--</beans:bean>-->
    <!--<beans:bean id="aggregator" class="com.griddynamics.jagger.storage.fs.logging.ChronologyLogAggregator">-->
        <!--<beans:property name="fileStorage" ref="storage"/>-->
    <!--</beans:bean>-->
    <!--<beans:bean id="reader" class="com.griddynamics.jagger.storage.fs.logging.HessianBufferedLogReader"/>-->
    <!--<beans:bean id="provider" class="com.griddynamics.jagger.master.HibernateSessionIdProvider"/>-->
    <!--<beans:bean id="storage" class="com.griddynamics.jagger.storage.fs.LocalFileStorage">-->
        <!--<beans:property name="workspace" value="w"/>-->
    <!--</beans:bean>-->

    <beans:bean id="standardPercentilesTimeSeries" class="java.util.ArrayList">
        <beans:constructor-arg>
            <beans:list>
                <beans:value>40</beans:value>
                <beans:value>50</beans:value>
                <beans:value>60</beans:value>
                <beans:value>70</beans:value>
                <beans:value>80</beans:value>
                <beans:value>90</beans:value>
                <beans:value>95</beans:value>
                <beans:value>99</beans:value>
            </beans:list>
        </beans:constructor-arg>
    </beans:bean>


</beans:beans>
