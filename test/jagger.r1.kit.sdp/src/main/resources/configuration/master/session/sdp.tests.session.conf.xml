<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2010-2012 Grid Dynamics Consulting Services, Inc, All Rights Reserved
  ~ http://www.griddynamics.com
  ~
  ~ This library is free software; you can redistribute it and/or modify it under the terms of
  ~ the GNU Lesser General Public License as published by the Free Software Foundation; either
  ~ version 2.1 of the License, or any later version.
  ~
  ~ THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  ~ AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  ~ IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  ~ DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE
  ~ FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  ~ DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  ~ SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  ~ CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  ~ OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  ~ OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  -->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <bean id="sdpSessionComment" class="com.macys.platform.SdpSessionComment">
        <property name="clusterInfo" ref="managementService"/>
    </bean>

    <bean id="managementService" class="org.springframework.remoting.caucho.HessianProxyFactoryBean">
        <property name="serviceUrl" value="${sdp.maintenance.urls}/sdp/admin/cluster-info/v1"/>
        <property name="serviceInterface" value="com.macys.platform.services.management.util.ClusterInfo"/>
        <property name="username" value="user"/>
        <property name="password" value="pass"/>
    </bean>

    <bean id="sdpPerfTestAbstractWorkload" abstract="true"
          class="com.griddynamics.jagger.engine.e1.scenario.WorkloadTask">
        <property name="clockConfiguration">
            <bean class="com.griddynamics.jagger.engine.e1.scenario.VirtualUsersClockConfiguration">
                <property name="tickInterval" value="1000"/>
                <property name="users" value="2"/>
            </bean>
        </property>
        <property name="terminateStrategyConfiguration">
            <bean class="com.griddynamics.jagger.engine.e1.scenario.TerminateByTotalSampling">
                <property name="samples" value="2000"/>
            </bean>
        </property>
    </bean>


    <bean id="sdpWorkloadTasksAbstractGenerator" abstract="true"
          class="com.macys.platform.providers.SdpWorkloadTasksGenerator">
        <property name="clocks">
            <list>
                <bean class="com.griddynamics.jagger.engine.e1.scenario.VirtualUsersClockConfiguration">
                    <property name="tickInterval" value="1000"/>
                    <property name="users" value="1"/>
                </bean>
                <bean class="com.griddynamics.jagger.engine.e1.scenario.VirtualUsersClockConfiguration">
                    <property name="tickInterval" value="1000"/>
                    <property name="users" value="10"/>
                </bean>
                <bean class="com.griddynamics.jagger.engine.e1.scenario.VirtualUsersClockConfiguration">
                    <property name="tickInterval" value="1000"/>
                    <property name="users" value="25"/>
                </bean>
                <bean class="com.griddynamics.jagger.engine.e1.scenario.VirtualUsersClockConfiguration">
                    <property name="tickInterval" value="1000"/>
                    <property name="users" value="50"/>
                </bean>
            </list>
        </property>
        <property name="terminations">
            <map key-type="java.lang.String"
                 value-type="com.griddynamics.jagger.engine.e1.scenario.TerminateStrategyConfiguration">
                <entry key=".*getProducts.*" value-ref="s150PerThread"/>
                <entry key=".+" value-ref="s2000PerThread"/>
            </map>

        </property>
        <property name="attendantMonitoring">
            <bean class="com.griddynamics.jagger.monitoring.MonitoringTask">
                <property name="name" value="Monitoring"/>
                <property name="terminationStrategy">
                    <bean class="com.griddynamics.jagger.monitoring.InfiniteDuration"/>
                </property>
            </bean>
        </property>
    </bean>

    <bean id="s2000PerThread" class="com.macys.platform.providers.SamplesPerThread">
        <property name="samples" value="2000"/>
    </bean>

    <bean id="s150PerThread" class="com.macys.platform.providers.SamplesPerThread">
        <property name="samples" value="150"/>
    </bean>

    <bean id="s1PerThread" class="com.macys.platform.providers.SamplesPerThread">
        <property name="samples" value="1"/>
    </bean>

    <bean id="s2PerThread" class="com.macys.platform.providers.SamplesPerThread">
        <property name="samples" value="2"/>
    </bean>

    <bean id="performanceTestsTasksAbstractConfiguration" abstract="true"
          class="com.griddynamics.jagger.master.configuration.Configuration">
        <property name="sessionExecutionListeners">
            <list>
                <ref bean="basicSessionCollector"/>
                <ref bean="basicAggregator"/>
            </list>
        </property>
        <property name="taskExecutionListeners">
            <list>
                <ref bean="basicSessionCollector"/>
                <ref bean="e1MasterCollector"/>
                <ref bean="basicAggregator"/>
                <ref bean="e1ScenarioAggregator"/>
                <ref bean="monitoringAggregator"/>
                <ref bean="durationLogProcessor"/>
            </list>
        </property>
    </bean>

    <bean id="sdpWorkloadMilestoneTasksGenerator" parent="sdpWorkloadTasksAbstractGenerator">
        <property name="prototypes">
            <list>
                <!--catalog-service-->
                <ref bean="getProductsCatalogService"/>

                <ref bean="getCategoryTreeCatalogService"/>
                <ref bean="getCategoryTreeCatalogServiceFullInfo"/>

                <ref bean="areProductsAvailableCatalogService"/>

                <ref bean="searchProductsCatalogService"/>
                <ref bean="searchProductsWithRefinementsCatalogService"/>
                <ref bean="searchProductsFilteredByBrandCatalogService"/>
                <ref bean="searchProductsFilteredByBrandWithRefinementsCatalogService"/>
                <ref bean="searchProductsFilteredByPriceCatalogService"/>
                <ref bean="searchProductsFilteredByPriceWithRefinementsCatalogService"/>
                <ref bean="searchProductsFilteredByUpcCatalogService"/>
                <ref bean="searchProductsFilteredByUpcWithRefinementsCatalogService"/>
                <ref bean="searchProductsSortedByNameCatalogService"/>
                <ref bean="searchProductsSortedByNameWithRefinementsCatalogService"/>
                <ref bean="searchProductsSortedByNewnessCatalogService"/>
                <ref bean="searchProductsSortedByNewnessWithRefinementsCatalogService"/>
                <ref bean="searchProductsSortedByPriceCatalogService"/>
                <ref bean="searchProductsSortedByPriceWithRefinementsCatalogService"/>
                <ref bean="searchProductsSortedByOriginalCatalogService"/>
                <ref bean="searchProductsSortedByOriginalWithRefinementsCatalogService"/>

                <ref bean="getCategoryCatalogService"/>
                <ref bean="getUpcCatalogService"/>
                <!--navigation-service-->
                <ref bean="getProductsNavigationService"/>
                <ref bean="getProductsWithoutMediaNavigationService"/>
                <ref bean="getProductsWithMediaNavigationService"/>
                <ref bean="getCategoryTreeNavigationService"/>
                <ref bean="getCategoryTreeNavigationServiceFullInfo"/>

                <ref bean="areProductsAvailableNavigationService"/>

                <ref bean="searchProductsNavigationService"/>
                <ref bean="searchProductsWithRefinementsNavigationService"/>
                <ref bean="searchProductsFilteredByBrandNavigationService"/>
                <ref bean="searchProductsFilteredByBrandWithRefinementsNavigationService"/>
                <ref bean="searchProductsFilteredByPriceNavigationService"/>
                <ref bean="searchProductsFilteredByPriceWithRefinementsNavigationService"/>
                <ref bean="searchProductsFilteredByUpcNavigationService"/>
                <ref bean="searchProductsFilteredByUpcWithRefinementsNavigationService"/>
                <ref bean="searchProductsSortedByNameNavigationService"/>
                <ref bean="searchProductsSortedByNameWithRefinementsNavigationService"/>
                <ref bean="searchProductsSortedByNewnessNavigationService"/>
                <ref bean="searchProductsSortedByNewnessWithRefinementsNavigationService"/>
                <ref bean="searchProductsSortedByPriceNavigationService"/>
                <ref bean="searchProductsSortedByPriceWithRefinementsNavigationService"/>
                <ref bean="searchProductsSortedByOriginalNavigationService"/>
                <ref bean="searchProductsSortedByOriginalWithRefinementsNavigationService"/>

                <!--<ref bean="complexCatalogService"/>-->


            </list>
        </property>
    </bean>

    <bean id="sdpWorkloadMilestoneCatalogTasksGenerator" parent="sdpWorkloadTasksAbstractGenerator">
        <property name="prototypes">
            <list>
                <ref bean="getProductsCatalogService"/>

                <ref bean="getCategoryTreeCatalogService"/>
                <ref bean="getCategoryTreeCatalogServiceFullInfo"/>

                <ref bean="areProductsAvailableCatalogService"/>

                <ref bean="searchProductsCatalogService"/>
                <ref bean="searchProductsWithRefinementsCatalogService"/>
                <ref bean="searchProductsFilteredByBrandCatalogService"/>
                <ref bean="searchProductsFilteredByBrandWithRefinementsCatalogService"/>
                <ref bean="searchProductsFilteredByPriceCatalogService"/>
                <ref bean="searchProductsFilteredByPriceWithRefinementsCatalogService"/>
                <ref bean="searchProductsFilteredByUpcCatalogService"/>
                <ref bean="searchProductsFilteredByUpcWithRefinementsCatalogService"/>
                <ref bean="searchProductsSortedByNameCatalogService"/>
                <ref bean="searchProductsSortedByNameWithRefinementsCatalogService"/>
                <ref bean="searchProductsSortedByNewnessCatalogService"/>
                <ref bean="searchProductsSortedByNewnessWithRefinementsCatalogService"/>
                <ref bean="searchProductsSortedByPriceCatalogService"/>
                <ref bean="searchProductsSortedByPriceWithRefinementsCatalogService"/>
                <ref bean="searchProductsSortedByOriginalCatalogService"/>
                <ref bean="searchProductsSortedByOriginalWithRefinementsCatalogService"/>

                <ref bean="getCategoryCatalogService"/>
                <ref bean="getUpcCatalogService"/>
            </list>
        </property>
    </bean>

    <bean id="sdpWorkloadMilestoneNavigationTasksGenerator" parent="sdpWorkloadTasksAbstractGenerator">
        <property name="prototypes">
            <list>
                <ref bean="getProductsNavigationService"/>
                <ref bean="getProductsWithoutMediaNavigationService"/>
                <ref bean="getProductsWithMediaNavigationService"/>

                <ref bean="getCategoryTreeNavigationService"/>
                <ref bean="getCategoryTreeNavigationServiceFullInfo"/>

                <ref bean="areProductsAvailableNavigationService"/>

                <ref bean="searchProductsNavigationService"/>
                <ref bean="searchProductsWithRefinementsNavigationService"/>
                <ref bean="searchProductsFilteredByBrandNavigationService"/>
                <ref bean="searchProductsFilteredByBrandWithRefinementsNavigationService"/>
                <ref bean="searchProductsFilteredByPriceNavigationService"/>
                <ref bean="searchProductsFilteredByPriceWithRefinementsNavigationService"/>
                <ref bean="searchProductsFilteredByUpcNavigationService"/>
                <ref bean="searchProductsFilteredByUpcWithRefinementsNavigationService"/>
                <ref bean="searchProductsSortedByNameNavigationService"/>
                <ref bean="searchProductsSortedByNameWithRefinementsNavigationService"/>
                <ref bean="searchProductsSortedByNewnessNavigationService"/>
                <ref bean="searchProductsSortedByNewnessWithRefinementsNavigationService"/>
                <ref bean="searchProductsSortedByPriceNavigationService"/>
                <ref bean="searchProductsSortedByPriceWithRefinementsNavigationService"/>
                <ref bean="searchProductsSortedByOriginalNavigationService"/>
                <ref bean="searchProductsSortedByOriginalWithRefinementsNavigationService"/>
                <!-- <ref bean="searchProductsSortedByBrandNavigationService"/>
               <ref bean="searchProductsSortedByBrandWithRefinementsNavigationService"/>-->
            </list>
        </property>
    </bean>

    <bean id="sdpWorkloadMilestoneDataRepairTasksGenerator" parent="sdpWorkloadTasksAbstractGenerator">
        <property name="clocks">
            <list>
                <bean class="com.griddynamics.jagger.engine.e1.scenario.VirtualUsersClockConfiguration">
                    <property name="tickInterval" value="1000"/>
                    <property name="users" value="1"/>
                </bean>
            </list>
        </property>
        <property name="terminations">
            <map key-type="java.lang.String"
                 value-type="com.griddynamics.jagger.engine.e1.scenario.TerminateStrategyConfiguration">
                <entry key=".*dataRefresh.*" value-ref="s1PerThread"/>
                <entry key=".*updateAvailability.*" value-ref="s1PerThread"/>
                <entry key=".+" value-ref="s2PerThread"/>
            </map>
        </property>
        <property name="prototypes">
            <list>
                <ref bean="oneCategoryCatalogDataRepairService"/>
                <ref bean="topLevelCategoryManCatalogDataRepairService"/>
                <ref bean="topLevelCategoryWomanCatalogDataRepairService"/>
                <ref bean="topLevelCategoryManRecursiveCatalogDataRepairService"/>
                <ref bean="topLevelCategoryRecursiveWithProductSandUpcsCatalogDataRepairService"/>
                <ref bean="makeUPCUnavailableRepairProductUpcsCatalogDataRepairService"/>
                <ref bean="makeUPCAvailableRepairProductUpcsCatalogDataRepairService"/>
                <ref bean="makeUPCUnavailableRepairCategoryProductsCatalogDataRepairService"/>
                <ref bean="makeUPCAvailableRepairCategoryProductsCatalogDataRepairService"/>
                <ref bean="makeUPCUnavailableRepairCategoryRecursiveCatalogDataRepairService"/>
                <ref bean="makeUPCAvailableRepairCategoryRecursiveCatalogDataRepairService"/>
                <ref bean="makeUPCUnavailableRepairCategoryRecursiveWithProductsAndUPCSCatalogDataRepairService"/>
                <ref bean="makeUPCAvailableRepairCategoryRecursiveWithProductsAndUPCSCatalogDataRepairService"/>
                <ref bean="dataRefreshService"/>
            </list>
        </property>
    </bean>

    <bean id="milestoneTestsConfiguration" parent="performanceTestsTasksAbstractConfiguration">
        <property name="tasks" value="#{sdpWorkloadMilestoneTasksGenerator.generate()}"/>
    </bean>

    <bean id="milestoneCatalogTestsConfiguration" parent="performanceTestsTasksAbstractConfiguration">
        <property name="tasks" value="#{sdpWorkloadMilestoneCatalogTasksGenerator.generate()}"/>
    </bean>

    <bean id="milestoneNavigationTestsConfiguration" parent="performanceTestsTasksAbstractConfiguration">
        <property name="tasks" value="#{sdpWorkloadMilestoneNavigationTasksGenerator.generate()}"/>
    </bean>

    <bean id="milestoneDataRepairTestsConfiguration" parent="performanceTestsTasksAbstractConfiguration">
        <property name="tasks" value="#{sdpWorkloadMilestoneDataRepairTasksGenerator.generate()}"/>
    </bean>


</beans>